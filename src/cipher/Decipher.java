package cipher;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Scanner;

public class Decipher {

	static final int[][] hextable = { { 0x9a, 0x5b, 0x22, 0x1 }, { 0x99, 0x58, 0x21, 0x2 }, { 0x98, 0x59, 0x20, 0x3 },
			{ 0x9f, 0x5e, 0x27, 0x4 }, { 0x9e, 0x5f, 0x26, 0x5 }, { 0x9d, 0x5c, 0x25, 0x6 }, { 0x9c, 0x5d, 0x24, 0x7 },
			{ 0x93, 0x52, 0x2b, 0x8 }, { 0x92, 0x53, 0x2a, 0x9 }, { 0x91, 0x50, 0x29, 0x0a },
			{ 0x90, 0x51, 0x28, 0x0b }, { 0x97, 0x56, 0x2f, 0x0c }, { 0x96, 0x57, 0x2e, 0x0d },
			{ 0x95, 0x54, 0x2d, 0x0e }, { 0x94, 0x55, 0x2c, 0x0f }, { 0x8b, 0x4a, 0x33, 0x10 },
			{ 0x8a, 0x4b, 0x32, 0x11 }, { 0x89, 0x48, 0x31, 0x12 }, { 0x88, 0x49, 0x30, 0x13 },
			{ 0x8f, 0x4e, 0x37, 0x14 }, { 0x8e, 0x4f, 0x36, 0x15 }, { 0x8d, 0x4c, 0x35, 0x16 },
			{ 0x8c, 0x4d, 0x34, 0x17 }, { 0x83, 0x42, 0x3b, 0x18 }, { 0x82, 0x43, 0x3a, 0x19 },
			{ 0x81, 0x40, 0x39, 0x1a } };

	static HashMap<Integer, Character> lookup;
	static final String letters = "abcdefghijklmnopqrstuvwxyz";

	public static void main(String[] args) throws IOException {
		Scanner s = new Scanner(System.in);
		System.out.print("Enter path of file to decode:");
		String filepath = s.nextLine();
		s.close();
		lookup = new HashMap<>();
		for (int i = 0; i < 26; i++) {
			for (int j = 0; i < 4; j++) {
				lookup.put(hextable[i][j] * (j + 1), letters.charAt(i));
			}
		}
		FileInputStream fis = new FileInputStream(filepath);
		int val = -1;
		int offset = 1;
		while ((val = fis.read()) != -1) {
			if (!lookup.containsKey(offset * val))
				System.out.print("_");
			else
				System.out.print(lookup.get(offset * val));
			offset++;
			if (offset == 4)
				offset = 1;
		}
		fis.close();
	}

}
